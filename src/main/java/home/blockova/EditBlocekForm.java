/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package home.blockova;

import com.toedter.calendar.JCalendar;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Janco1
 */
public class EditBlocekForm extends javax.swing.JDialog {

    private Database database;
    private Blocek blocek;
    private String oldPredajca;
    private List<Predajca> predajcovia;

    /**
     * Creates new form EditBlocekForm
     */
    public EditBlocekForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public EditBlocekForm(java.awt.Frame parent, boolean modal, Blocek blocek, Database db) {
        this(parent, modal);
        dkpTextField.setText(blocek.dkp);
        oldPredajca = blocek.dkp;

        System.out.println("datum na blocku: " + blocek.datum);
        datumTextField.setText(blocek.datum.substring(0, 16));
        Date dat = new Date(System.currentTimeMillis());
        try {
            dat = new SimpleDateFormat("yyyy-MM-dd").parse(blocek.datum.split(" ")[0]);
        } catch (ParseException ex) {
            Logger.getLogger(EditBlocekForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDateChooser1.setDate(dat);
        System.out.println("datum nastaveny na: " + dat);
        //jDateChooser1.setDate(new Date(blocek.datum));
        //jDateChooser1.setDate(new Date(Integer.parseInt(blocek.datum.split(" ")[0].split("-")[0]), Integer.parseInt(blocek.datum.split(" ")[0].split("-")[1]), Integer.parseInt(blocek.datum.split(" ")[0].split("-")[2])));

        hourSlider.setValue(Integer.parseInt(blocek.datum.split(" ")[1].split(":")[0]));
        minuteSlider.setValue(Integer.parseInt(blocek.datum.split(" ")[1].split(":")[1]));
        sumaTextField.setText(Double.toString(blocek.suma));
        database = db;
        pocetTextField.setText(Integer.toString(blocek.pocet));
        this.blocek = blocek;
        setTitle("Edit Bloček");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        timeLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        minuteSlider = new javax.swing.JSlider();
        hourSlider = new javax.swing.JSlider();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        sumaTextField = new javax.swing.JTextField();
        datumTextField = new javax.swing.JTextField();
        dkpTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        pocetTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Bloček");
        setResizable(false);

        jLabel6.setText("Čas:");

        timeLabel.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        timeLabel.setText("00:00");

        jLabel4.setText("Hodina:");

        jLabel5.setText("Minúta:");

        minuteSlider.setMaximum(59);
        minuteSlider.setValue(0);
        minuteSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minuteSliderStateChanged(evt);
            }
        });
        minuteSlider.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                minuteSliderPropertyChange(evt);
            }
        });

        hourSlider.setMaximum(24);
        hourSlider.setValue(0);
        hourSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                hourSliderStateChanged(evt);
            }
        });
        hourSlider.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                hourSliderPropertyChange(evt);
            }
        });

        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        jLabel2.setText("Dátum:");

        jLabel1.setText("DKP:");

        jLabel3.setText("Suma:");

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Počet:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(123, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(updateButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)
                        .addGap(109, 109, 109))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pocetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(sumaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(8, 8, 8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(hourSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(minuteSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(timeLabel))))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(dkpTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                .addComponent(datumTextField))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(25, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(209, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(pocetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(cancelButton))
                .addGap(21, 21, 21))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(65, 65, 65)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(dkpTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(datumTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(23, 23, 23)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(hourSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(minuteSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(timeLabel))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sumaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addGap(65, 65, 65)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minuteSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minuteSliderStateChanged
        System.out.println("minuteSliderPropertyCHange: " + minuteSlider.getValue());
        String minut = "" + minuteSlider.getValue();
        if (minuteSlider.getValue() < 10) {
            minut = "" + 0 + minuteSlider.getValue();
        }
        String cas = timeLabel.getText();
        timeLabel.setText(cas.substring(0, 2) + ":" + minut);
        if (jDateChooser1.getDate() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            datumTextField.setText(sdf.format(jDateChooser1.getDate().getTime()) + " " + timeLabel.getText());
        } else {
            System.out.println("jdatechooser is null");
        }
    }//GEN-LAST:event_minuteSliderStateChanged

    private void minuteSliderPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_minuteSliderPropertyChange

    }//GEN-LAST:event_minuteSliderPropertyChange

    private void hourSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_hourSliderStateChanged
        System.out.println("hourSliderPropertyCHange: " + hourSlider.getValue());
        String hodin = "" + hourSlider.getValue();
        if (hourSlider.getValue() < 10) {
            hodin = "" + 0 + hourSlider.getValue();
        }
        String cas = timeLabel.getText();
        timeLabel.setText(hodin + ":" + cas.substring(3));
        if (jDateChooser1.getDate() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            datumTextField.setText(sdf.format(jDateChooser1.getDate().getTime()) + " " + timeLabel.getText());
        } else {
            System.out.println("jdatechooser is null");
        }
    }//GEN-LAST:event_hourSliderStateChanged

    private void hourSliderPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_hourSliderPropertyChange

    }//GEN-LAST:event_hourSliderPropertyChange

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        System.out.println("jdatechooser property change");
        if (jDateChooser1.getDate() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            datumTextField.setText(sdf.format(jDateChooser1.getDate().getTime()) + " " + timeLabel.getText());
        } else {
            System.out.println("jdatechooser is null");
        }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        Blocek novy = new Blocek();
        novy.dkp = dkpTextField.getText();
        novy.datum = datumTextField.getText() + ":00";
        novy.suma = Double.parseDouble(sumaTextField.getText());
        novy.pocet = Integer.parseInt(pocetTextField.getText());
        novy.id = blocek.id;
        novy.registrator=blocek.registrator;
        novy.timeInserted=blocek.timeInserted;
        novy.timeMakroGenerated=blocek.timeMakroGenerated;

        database.updateBlocekFromDB(novy);
        predajcovia = database.getPredajcaList();
        if (jeNovyPredajca(novy.dkp)) {
            System.out.println("je novy predajca");
            database.insertPredajcaToDB(new Predajca(novy.dkp, novy.dkp));
        }
//        Predajca updatnuty=database.getPredajca(oldPredajca);
//        updatnuty.dkp=novy.dkp;
//        database.updatePredajcaFromDB(updatnuty);
        dispose();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditBlocekForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditBlocekForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditBlocekForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditBlocekForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditBlocekForm dialog = new EditBlocekForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private boolean jeNovyPredajca(String dkp) {
        for (Predajca p : predajcovia) {
            if (p.dkp.equalsIgnoreCase(dkp)) {
                return false;
            }
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField datumTextField;
    private javax.swing.JTextField dkpTextField;
    private javax.swing.JSlider hourSlider;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JSlider minuteSlider;
    private javax.swing.JTextField pocetTextField;
    private javax.swing.JTextField sumaTextField;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
